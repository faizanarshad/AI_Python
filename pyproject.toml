[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-ecommerce-analytics"
version = "1.0.0"
description = "A comprehensive business intelligence dashboard for e-commerce consumer behavior analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Analytics Team", email = "contact@aianalytics.com"}
]
maintainers = [
    {name = "AI Analytics Team", email = "contact@aianalytics.com"}
]
keywords = [
    "e-commerce",
    "analytics",
    "dashboard",
    "business-intelligence",
    "ai",
    "machine-learning",
    "data-visualization",
    "streamlit",
    "plotly"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Business/Financial",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "streamlit>=1.28.1",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "plotly>=5.17.0",
    "scikit-learn>=1.3.0",
    "statsmodels>=0.14.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/your-repo/ai-ecommerce-analytics"
Documentation = "https://ai-ecommerce-analytics.readthedocs.io/"
Repository = "https://github.com/your-repo/ai-ecommerce-analytics"
"Bug Tracker" = "https://github.com/your-repo/ai-ecommerce-analytics/issues"

[project.scripts]
ai-ecommerce-dashboard = "app:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 